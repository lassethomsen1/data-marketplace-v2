generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

// HUSK AT NÅR DU ÆNDRE NAVNE PÅ MODELLER SÅ ÆNDRE DE OGSÅ API REPSONSE
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                        String      @id @default(uuid())
  email                     String      @unique
  name                      String?
  password                  String
  role                      Role        @default(USER)
  datasets                  Datasets[]  @relation("UserDatasets")
  purchases                 Purchases[] @relation("UserPurchases")
  stripeAccountId           String?
  stripeOnboardingCompleted Boolean     @default(false)
  createdAt                 DateTime    @default(now())
}

enum Role {
  USER
  ADMIN
}

model Purchases {
  id              String         @id @default(uuid())
  buyerId         String
  datasetId       String
  buyer           Users          @relation("UserPurchases", fields: [buyerId], references: [id])
  dataset         Datasets       @relation(fields: [datasetId], references: [id])
  stripeSessionId String?
  status          PurchaseStatus @default(PENDING)
  paidAmount      Int? // amount paid in cents
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

model Datasets {
  id              String        @id @default(uuid())
  title           String
  description     String
  filekey         String
  filetype        String
  filesize        Int
  tags            String[]
  sampleData      String
  price           Int // in cents for Stripe
  sellerId        String
  status          DatasetStatus @default(PROCESSING)
  category        String?
  additionalFiles Json?
  seller          Users         @relation("UserDatasets", fields: [sellerId], references: [id])
  purchases       Purchases[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

enum DatasetStatus {
  PROCESSING
  AVAILABLE
  UNAVAILABLE
}
